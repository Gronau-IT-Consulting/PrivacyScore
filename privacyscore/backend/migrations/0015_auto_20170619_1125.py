# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-19 11:25
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('backend', '0014_auto_20170619_1337'),
    ]

    operations = [
        migrations.RunSQL('''
        CREATE OR REPLACE FUNCTION update_scan_info() RETURNS TRIGGER AS $$
        DECLARE
          old_max timestamp;
          new_scan RECORD;
        BEGIN
          IF (TG_OP = 'DELETE') THEN
            SELECT id, "end" FROM backend_scan
              WHERE site_id = OLD.site_id AND "end" IS NOT NULL
              ORDER BY "end"
              LIMIT 1
              INTO new_scan;
            IF NOT FOUND THEN
              UPDATE backend_site SET last_scan_id = NULL WHERE id=OLD.site_id;
              UPDATE backend_scanlist SET last_scan_id=NULL
                WHERE id IN (SELECT scanlist_id FROM backend_site_scan_lists WHERE site_id = OLD.site_id);
            ELSE
              UPDATE backend_site SET last_scan_id = new_scan.id WHERE id=OLD.site_id;
              UPDATE backend_scanlist SET last_scan_id=new_scan.id
                WHERE id IN (SELECT scanlist_id FROM backend_site_scan_lists WHERE site_id = OLD.site_id);
            END IF;
            RETURN OLD;
          ELSIF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
            IF NEW."end" IS NULL THEN
              RETURN NEW;
            END IF;
            SELECT MAX("end") FROM backend_scan WHERE site_id = NEW.site_id INTO old_max;
            IF old_max IS NULL OR NEW."end" >= old_max THEN
                UPDATE backend_site SET last_scan_id = NEW.id WHERE id=NEW.site_id;
                UPDATE backend_scanlist SET last_scan_id=NEW.id
                    WHERE id IN (SELECT scanlist_id FROM backend_site_scan_lists WHERE site_id = NEW.site_id);
            END IF;
            RETURN NEW;
          END IF;
        END
        $$ LANGUAGE plpgsql;
        
        '''),
        migrations.RunSQL('''
        CREATE TRIGGER scan_update
        AFTER DELETE OR INSERT OR UPDATE OF "end" ON backend_scan
        FOR EACH ROW
        EXECUTE PROCEDURE update_scan_info();
        ''')
    ]
